{"mappings":"AAAA,SAASA,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACpCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,EAIF,CACXQ,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,uBACnCE,UAAWH,SAASC,cAAc,sBAClCG,OAAQJ,SAASC,cAAc,0BAG5BF,KAAKM,iBAAiB,UAE3B,SAAoBC,GAClBA,EAAMC,iBACN,IAAIC,EAAQC,OAAOH,EAAMI,cAAcnB,MAAMoB,OAC7C,MAAMC,EAAOH,OAAOH,EAAMI,cAAcE,KAAKD,OACvCP,EAASK,OAAOH,EAAMI,cAAcN,OAAOO,OAGjD,IAAK,IAAIE,EAAI,EAAGA,EAAIT,EAAQS,IAC1BxB,EAAcwB,EAAGL,GACdM,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MACjBwB,QAAQC,IAAI,uBAAqB1B,QAAiBC,MAAU,IAG7D0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAClBwB,QAAQC,IAAI,sBAAoB1B,QAAeC,MAAU,IAE7DiB,GAASI,C","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        }\n      }, delay);\n    });\n    return promise;\n  }\nconst refs = {\n  form: document.querySelector(\".form\"),\n  firstDelay: document.querySelector('input[name=\"delay\"]'),\n  delayStep: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]')\n}\n\nrefs.form.addEventListener('submit', submitForm);\n\nfunction submitForm(event) {\n  event.preventDefault();\n  let delay = Number(event.currentTarget.delay.value);\n  const step = Number(event.currentTarget.step.value);\n  const amount = Number(event.currentTarget.amount.value);\n\n  \n  for (let i = 1; i < amount; i++) { \n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n}\n\n};\n\n"],"names":["$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","form","document","querySelector","firstDelay","delayStep","amount","addEventListener","event","preventDefault","delay1","Number","currentTarget","value","step","i","then","console","log","catch"],"version":3,"file":"03-promises.e7f91d5f.js.map"}